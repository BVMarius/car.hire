openapi: 3.0.1
info:
  description: Orchestrator for the Car Rental API flow, based on Java. Main entry point to the Car rental API.
  version: "1.0.0"
  title: Car Rental API
  contact:
    email: marius.moraru@live.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: http://localhost:{port}
    description: local environment
    variables:
      port:
        default: '8080'
tags:
  - name: user
    description: Endpoints related with user resources
paths:
  /api/user:
    post:
      tags:
        - user
      description: Creates an user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        description: Creates an user
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: CreateResponse
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
          description: UnprocessableEntity
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
      summary: Creates an user
  /api/user/list:
    get:
      tags:
        - user
      description: List all users
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
          description: List all users
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
          description: UnprocessableEntity
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
  /api/user/{userId}:
    get:
      tags:
        - user
      description: Return a specific user by id
      summary: "Find user by ID"
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
          description: List all users
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
          description: UnprocessableEntity
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
          description: Unauthorized
    patch:
      tags:
        - user
      summary: Updates  a specific user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: "user that needs to be updated"
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        description: Creates an user
        required: true
      responses:
        '400':
          description: "Invalid user supplied"
        '404':
          description: "User not found"
        '422':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
          description: UnprocessableEntity
    delete:
      tags:
        - user
      summary: Delete a user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: The id of the user that needs to be deleted
          required: true
          schema:
            type: string
            format: int64
      responses:
        '400':
          description: "Invalid username supplied"
        '404':
          description: "User not found"
        '422':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
          description: UnprocessableEntity
components:
  responses:
    Unauthorized:
      description: unauthorized
    BadRequest:
      description: bad request
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ValidationDTO'
    ServerError:
      description: internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDTO'
  schemas:
    UnauthorizedResponse:
      description: The response when an user is not uthorized to access a specific resource.
      properties:
        message:
          description: The message to be displayed
          type: string
    CreateUserRequest:
      description: Create user details.
      properties:
        id:
          description: User id
          type: string
        email:
          description: User's email
          type: string
        password:
          description: User's password
          type: string
        username:
          description: Username of the user
          type: string
        first_name:
          description: First name of the user
          type: string
        last_name:
          description: Last name of the user
          type: string
        country:
          description: Contry of residence for the user
          type: string
        licese_number:
          description: License number
        status:
          description: User status
          enum:
            - ACTIVE
            - DELETED
    UserResponse:
      description: List user details.
      properties:
        id:
          description: User id
          type: string
        email:
          description: User's email
          type: string
        password:
          description: User's password
          type: string
        username:
          description: Username of the user
          type: string
        first_name:
          description: First name of the user
          type: string
        last_name:
          description: Last name of the user
          type: string
        country:
          description: Contry of residence for the user
          type: string
        licese_number:
          description: License number
        status:
          description: User status
          enum:
            - ACTIVE
            - DELETED
    SuccessResponse:
      description: Success response when an user is created
      properties:
        id:
          description: User id
          type: string
    ValidationDTO:
      type: object
      properties:
        code:
          type: string
        field:
          type: string
        description:
          type: string
    ErrorDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    UnprocessableEntityResponse:
      description: "List of JSON-API spec compliant error response objects"
      properties:
        errors:
          description: "List of errors"
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
      required:
        - errors
      type: object
    ValidationError:
      description: JSON-API spec compliant error response object
      properties:
        code:
          description: Code representing reason for error
          enum:
            - invalid_constraint
            - invalid_format
            - invalid_type
            - invalid_enum_value
            - in_use
            - not_editable
            - required
          type: string
        detail:
          description: Error detail
          nullable: true
          type: string
      title: ValidationError
      type: object
